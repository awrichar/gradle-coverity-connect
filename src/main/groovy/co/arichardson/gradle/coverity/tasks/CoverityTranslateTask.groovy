package co.arichardson.gradle.coverity.tasks

import co.arichardson.gradle.coverity.Utils
import org.gradle.api.GradleException
import org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask

class CoverityTranslateTask extends AbstractCoverityIntermediatesTask {
    AbstractNativeCompileTask compileTask
    File sourceFile

    CoverityTranslateTask() {
        super()
        executable Utils.findCoverityTool('cov-translate', coverity.path)
    }

    @Override
    protected void exec() {
        // Locate the compiler binary
        def compiler = Utils.findGccCompiler(compileTask.toolChain, compileTask)
        if (compiler == null) {
            throw new GradleException("Could not infer GCC compiler for: ${compileTask}")
        }

        // Locate the options file generated by the compile task
        def optionsFile = new File(compileTask.temporaryDir, 'options.txt')

        args compiler.path, "@${optionsFile}", sourceFile.path
        super.exec()
    }
}
